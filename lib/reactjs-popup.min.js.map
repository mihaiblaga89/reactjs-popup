{"version":3,"file":"reactjs-popup.min.js","sources":["../src/Utils.js","../src/index.css.js","../src/index.js"],"sourcesContent":["/* Algo to calculate position\n  1. center position for popup content : the center of the trigger will be the center of the content content\n      so the popup content position will be like this :\n      top => the y of the center for the trigger element : trigger.top + trigger.height/2\n      left => the x of the center for the trigger element : trigger.left + trigger.width/2\n\n  2. translate position according to the first  position attribute  passed  in the function argument\n      for example :\n        position = 'left top'\n        we need to handle the first argument in the position: 'left' => that's mean we need to translate the popup content according to the X axis by - content.width/2\n\n  3.translate position according to the first  position attribute  passed  in the function argument\n    for example :\n      position = 'left top'\n      the second argument 'top' => translate popup content by + content.height*4/5\n\n  4. check if calculated position is going out of bounds of wrapper box or not. If yes repeat 1-3 for next position enum. By default wrapper box is window element\n*/\n\nfunction getCoordinatesForPosition(\n  triggerBounding,\n  ContentBounding,\n  position,\n  arrow,\n  { offsetX, offsetY }\n) {\n  const style = {};\n  const margin = arrow ? 8 : 0;\n  const args = position.split(\" \");\n  // the step N 1 : center the popup content => ok\n  const CenterTop = triggerBounding.top + triggerBounding.height / 2;\n  const CenterLeft = triggerBounding.left + triggerBounding.width / 2;\n  const { height, width } = ContentBounding;\n  let top = CenterTop - height / 2;\n  let left = CenterLeft - width / 2;\n  let transform = \"\";\n  let arrowTop = \"0%\";\n  let arrowLeft = \"0%\";\n  // the  step N 2 : => ok\n  switch (args[0]) {\n    case \"top\":\n      top -= height / 2 + triggerBounding.height / 2 + margin;\n      transform = `rotate(45deg)`;\n      arrowTop = \"100%\";\n      arrowLeft = \"50%\";\n      break;\n    case \"bottom\":\n      top += height / 2 + triggerBounding.height / 2 + margin;\n      transform = `rotate(225deg)`;\n      arrowLeft = \"50%\";\n      break;\n    case \"left\":\n      left -= width / 2 + triggerBounding.width / 2 + margin;\n      transform = ` rotate(-45deg)`;\n      arrowLeft = \"100%\";\n      arrowTop = \"50%\";\n      break;\n    case \"right\":\n      left += width / 2 + triggerBounding.width / 2 + margin;\n      transform = `rotate(135deg)`;\n      arrowTop = \"50%\";\n\n      break;\n  }\n  switch (args[1]) {\n    case \"top\":\n      top = triggerBounding.top;\n      arrowTop = triggerBounding.height / 2 + \"px\";\n      break;\n    case \"bottom\":\n      top = triggerBounding.top - height + triggerBounding.height;\n      arrowTop = height - triggerBounding.height / 2 + \"px\";\n      break;\n    case \"left\":\n      left = triggerBounding.left;\n      arrowLeft = triggerBounding.width / 2 + \"px\";\n      break;\n    case \"right\":\n      left = triggerBounding.left - width + triggerBounding.width;\n      arrowLeft = width - triggerBounding.width / 2 + \"px\";\n      break;\n  }\n\n  top = args[0] === \"top\" ? top - offsetY : top + offsetY;\n  left = args[0] === \"left\" ? left - offsetX : left + offsetX;\n\n  return { top, left, transform, arrowLeft, arrowTop };\n}\n\nexport default function calculatePosition(\n  triggerBounding,\n  ContentBounding,\n  positions,\n  arrow,\n  { offsetX, offsetY },\n  wrapperBox\n) {\n  let bestCoords;\n  let i = 0;\n  while (i < positions.length) {\n    bestCoords = getCoordinatesForPosition(\n      triggerBounding,\n      ContentBounding,\n      positions[i],\n      arrow,\n      { offsetX, offsetY }\n    );\n\n    const contentBox = {\n      top: bestCoords.top,\n      left: bestCoords.left,\n      width: ContentBounding.width,\n      height: ContentBounding.height\n    };\n\n    if (\n      contentBox.top <= wrapperBox.top ||\n      contentBox.left <= wrapperBox.left ||\n      contentBox.top + contentBox.height >=\n        wrapperBox.top + wrapperBox.height ||\n      contentBox.left + contentBox.width >= wrapperBox.left + wrapperBox.width\n    ) {\n      i++;\n    } else {\n      break;\n    }\n  }\n\n  return bestCoords;\n}\n","export default {\n  popupContent: {\n    tooltip: {\n      position: \"absolute\",\n      zIndex: \"2\",\n      width: \"200px\",\n      background: `rgb(255, 255, 255)`,\n      border: `1px solid rgb(187, 187, 187)`,\n      boxShadow: `rgba(0, 0, 0, 0.2) 0px 1px 3px`,\n      padding: \"5px\"\n    },\n    modal: {\n      position: \"relative\",\n      background: `rgb(255, 255, 255)`,\n      width: \"50%\",\n      margin: \"auto\",\n      border: `1px solid rgb(187, 187, 187)`,\n      padding: \"5px\"\n    }\n  },\n  popupArrow: {\n    height: \"10px\",\n    width: \"10px\",\n    position: \"absolute\",\n    background: \"rgb(255, 255, 255)\",\n    transform: \"rotate(45deg)\",\n    margin: \"-5px\",\n    zIndex: \"-1\",\n    boxShadow: \"rgba(0, 0, 0, 0.2) 1px 1px 1px\"\n  },\n  overlay: {\n    tooltip: {\n      position: \"fixed\",\n      top: \"0\",\n      bottom: \"0\",\n      left: \"0\",\n      right: \"0\"\n    },\n    modal: {\n      position: \"fixed\",\n      top: \"0\",\n      bottom: \"0\",\n      left: \"0\",\n      right: \"0\",\n      background: `rgba(0, 0, 0,0.5)`,\n      display: \"flex\",\n      zIndex: \"999\"\n    }\n  }\n};\n","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport calculatePosition from './Utils';\n\nimport styles from './index.css.js';\nconst POSITION_TYPES = [\n    'top left',\n    'top center',\n    'top right',\n    'right top',\n    'right center',\n    'right bottom',\n    'bottom left',\n    'bottom center',\n    'bottom right',\n    'left top',\n    'left center',\n    'left bottom',\n];\n\nexport default class Popup extends React.PureComponent {\n    static defaultProps = {\n        children: () => <span> Your Content Here !!</span>,\n        trigger: null,\n        onOpen: () => {},\n        onClose: () => {},\n        defaultOpen: false,\n        open: false,\n        preventClose: false,\n        disabled: false,\n        closeOnDocumentClick: true,\n        repositionOnResize: true,\n        closeOnEscape: true,\n        keepOpenOnClick: false,\n        on: ['click'],\n        contentStyle: {},\n        arrowStyle: {},\n        overlayStyle: {},\n        className: '',\n        position: 'bottom center',\n        modal: false,\n        lockScroll: false,\n        arrow: true,\n        offsetX: 0,\n        offsetY: 0,\n        mouseEnterDelay: 100,\n        mouseLeaveDelay: 100,\n        keepTooltipInside: false,\n    };\n    state = {\n        isOpen: this.props.open || this.props.defaultOpen,\n        modal: this.props.modal ? true : !this.props.trigger,\n        openedBy: null,\n        // we create this modal state because the popup can't be a tooltip if the trigger prop doesn't exist\n    };\n\n    constructor(props) {\n        super(props);\n        this.setTriggerRef = r => (this.TriggerEl = r);\n        this.setContentRef = r => (this.ContentEl = r);\n        this.setArrowRef = r => (this.ArrowEl = r);\n        this.setHelperRef = r => (this.HelperEl = r);\n        this.timeOut = 0;\n    }\n\n    componentDidMount() {\n        const { closeOnEscape, defaultOpen, repositionOnResize } = this.props;\n        if (defaultOpen) this.setPosition();\n        if (closeOnEscape) {\n            window.addEventListener('keyup', this.onEscape);\n        }\n        if (repositionOnResize) {\n            window.addEventListener('resize', this.repositionOnResize);\n        }\n    }\n\n    repositionOnResize = () => {\n        this.setPosition();\n    };\n    onEscape = e => {\n        if (e.key === 'Escape') this.closePopup();\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.open === nextProps.open) return;\n        if (nextProps.open) this.openPopup();\n        else this.closePopup();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.disabled !== this.props.disabled && this.props.disabled && this.state.isOpen) {\n            this.closePopup();\n        }\n    }\n\n    componentWillUnmount() {\n        // kill any function to execute if the component is unmounted\n        clearTimeout(this.timeOut);\n\n        const { closeOnEscape, repositionOnResize } = this.props;\n        // remove events listeners\n        if (closeOnEscape) {\n            window.removeEventListener('keyup', this.onEscape);\n        }\n        if (repositionOnResize) {\n            window.removeEventListener('resize', this.repositionOnResize);\n        }\n    }\n\n    lockScroll = () => {\n        if (this.state.modal && this.props.lockScroll) document.getElementsByTagName('body')[0].style.overflow = 'hidden';\n    };\n    resetScroll = () => {\n        if (this.state.modal && this.props.lockScroll) document.getElementsByTagName('body')[0].style.overflow = 'auto';\n    };\n\n    togglePopup = () => {\n        const { isOpen, openedBy } = this.state;\n        const { keepOpenOnClick } = this.props;\n        if (isOpen && keepOpenOnClick && openedBy === 'hover') return this.setState({ openedBy: 'click' });\n        if (isOpen) this.closePopup();\n        else this.openPopup(true);\n    };\n    openPopup = byClick => {\n        if (typeof document !== 'undefined') {\n            const element = document.getElementsByClassName('popup-overlay');\n            element.parentNode.removeChild(element);\n        }\n\n        if (this.state.isOpen || this.props.disabled) return;\n        this.setState({ isOpen: true, openedBy: byClick ? 'click' : 'hover' }, () => {\n            this.setPosition();\n            this.props.onOpen();\n            this.lockScroll();\n        });\n    };\n    closePopup = force => {\n        if (!this.state.isOpen || (this.props.preventClose && !force)) return; // allow for the user to prevent close\n        this.props.onClose();\n        this.setState({ isOpen: false, openedBy: null }, () => {\n            this.resetScroll();\n        });\n    };\n    onMouseEnter = event => {\n        console.log('event', event);\n        const { isOpen } = this.state;\n        if (!isOpen) {\n            clearTimeout(this.timeOut);\n            const { mouseEnterDelay } = this.props;\n            this.timeOut = setTimeout(() => this.openPopup(), mouseEnterDelay);\n        }\n    };\n    onMouseLeave = event => {\n        // const e = event.toElement || event.relatedTarget;\n        // console.log('rel', e);\n        // console.log('ref', this.TriggerEl);\n        // if (e.parentNode.parentNode.parentNode.parentNode == this.TriggerEl || e == this.TriggerEl) {\n        //     return;\n        // }\n        clearTimeout(this.timeOut);\n        const { mouseLeaveDelay, keepOpenOnClick } = this.props;\n        const { openedBy } = this.state;\n        if (keepOpenOnClick && openedBy === 'click') return;\n        this.timeOut = setTimeout(() => this.closePopup(), mouseLeaveDelay);\n    };\n\n    getTooltipBoundary = () => {\n        const { keepTooltipInside } = this.props;\n        let boundingBox = {\n            top: 0,\n            left: 0,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        if (typeof keepTooltipInside === 'string') {\n            const selector = document.querySelector(keepTooltipInside);\n            if (process.env.NODE_ENV !== 'production') {\n                if (selector === null)\n                    throw new Error(\n                        `${keepTooltipInside} selector is not exist : keepTooltipInside must be a valid html selector 'class' or 'Id'  or a boolean value`\n                    );\n            }\n            boundingBox = selector.getBoundingClientRect();\n        }\n        return boundingBox;\n    };\n\n    setPosition = () => {\n        const { modal, isOpen } = this.state;\n        if (modal || !isOpen) return;\n        const { arrow, position, offsetX, offsetY, keepTooltipInside, arrowStyle } = this.props;\n        const helper = this.HelperEl.getBoundingClientRect();\n        const trigger = this.TriggerEl.getBoundingClientRect();\n        const content = this.ContentEl.getBoundingClientRect();\n        const boundingBox = this.getTooltipBoundary();\n        let positions = Array.isArray(position) ? position : [position];\n\n        // keepTooltipInside would be activated if the  keepTooltipInside exist or the position is Array\n        if (keepTooltipInside || Array.isArray(position)) positions = [...positions, ...POSITION_TYPES];\n\n        const cords = calculatePosition(\n            trigger,\n            content,\n            positions,\n            arrow,\n            {\n                offsetX,\n                offsetY,\n            },\n            boundingBox\n        );\n        this.ContentEl.style.top = cords.top - helper.top + 'px';\n        this.ContentEl.style.left = cords.left - helper.left + 'px';\n        if (arrow) {\n            this.ArrowEl.style['transform'] = cords.transform;\n            this.ArrowEl.style['-ms-transform'] = cords.transform;\n            this.ArrowEl.style['-webkit-transform'] = cords.transform;\n            this.ArrowEl.style.top = arrowStyle.top || cords.arrowTop;\n            this.ArrowEl.style.left = arrowStyle.left || cords.arrowLeft;\n        }\n        if (\n            window.getComputedStyle(this.TriggerEl, null).getPropertyValue('position') == 'static' ||\n            window.getComputedStyle(this.TriggerEl, null).getPropertyValue('position') == ''\n        )\n            this.TriggerEl.style.position = 'relative';\n    };\n\n    addWarperAction = () => {\n        const { contentStyle, className, on } = this.props;\n        const { modal } = this.state;\n        const popupContentStyle = modal ? styles.popupContent.modal : styles.popupContent.tooltip;\n\n        const childrenElementProps = {\n            className: `popup-content ${className}`,\n            style: Object.assign({}, popupContentStyle, contentStyle),\n            ref: this.setContentRef,\n            onClick: e => {\n                e.stopPropagation();\n            },\n        };\n        if (!modal && on.indexOf('hover') >= 0) {\n            childrenElementProps.onMouseOver = this.onMouseEnter;\n            childrenElementProps.onMouseOut = this.onMouseLeave;\n        }\n        return childrenElementProps;\n    };\n    renderTrigger = () => {\n        const triggerProps = { key: 'T' };\n        const { on, trigger } = this.props;\n        const onAsArray = Array.isArray(on) ? on : [on];\n        // for (let i = 0, len = onAsArray.length; i < len; i++) {\n        //     switch (onAsArray[i]) {\n        //         case 'click':\n        //             triggerProps.onClick = this.togglePopup;\n        //             break;\n        //         case 'hover':\n        //             triggerProps.onMouseOver = this.onMouseEnter;\n        //             triggerProps.onMouseOut = this.onMouseLeave;\n        //             break;\n        //         case 'focus':\n        //             triggerProps.onFocus = this.onMouseEnter;\n        //             break;\n        //     }\n        // }\n\n        // if (typeof trigger === 'function')\n        //     return (\n        //         <div\n        //             onClick={onAsArray.includes('click') ? this.togglePopup : null}\n        //             onMouseOver={onAsArray.includes('hover') ? this.onMouseEnter : null}\n        //             onMouseOut={onAsArray.includes('hover') ? this.onMouseLeave : null}\n        //             onFocus={onAsArray.includes('focus') ? this.onMouseEnter : null}>\n        //             {React.cloneElement(trigger(this.state.isOpen), triggerProps)}\n        //         </div>\n        //     );\n\n        return (\n            <div\n                onClick={onAsArray.includes('click') ? this.togglePopup : null}\n                onMouseEnter={onAsArray.includes('hover') ? this.onMouseEnter : null}\n                onMouseLeave={onAsArray.includes('hover') ? this.onMouseLeave : null}\n                onFocus={onAsArray.includes('focus') ? this.onMouseEnter : null}\n                key=\"T\">\n                {trigger}\n            </div>\n        );\n    };\n\n    renderContent = () => {\n        const { arrow, arrowStyle } = this.props;\n        const { modal } = this.state;\n        return (\n            <div {...this.addWarperAction()} key=\"C\">\n                {arrow && !modal && <div ref={this.setArrowRef} style={Object.assign({}, styles.popupArrow, arrowStyle)} />}\n                {typeof this.props.children === 'function' ? this.props.children(this.closePopup, this.state.isOpen) : this.props.children}\n            </div>\n        );\n    };\n\n    onDocumentClick = () => {\n        const { closeOnDocumentClick, overridePreventCloseOnDocumentClick, preventClose } = this.props;\n        if ((preventClose && !overridePreventCloseOnDocumentClick) || !closeOnDocumentClick) return;\n        this.closePopup(true);\n    };\n\n    render() {\n        const { overlayStyle, closeOnDocumentClick, on } = this.props;\n        const { modal, openedBy } = this.state;\n        console.log('state', this.state);\n        const overlay = this.state.isOpen && closeOnDocumentClick && openedBy !== 'hover';\n        const ovStyle = modal ? styles.overlay.modal : styles.overlay.tooltip;\n        return [\n            !!this.props.trigger && (\n                <Ref innerRef={this.setTriggerRef} key=\"R\">\n                    {this.renderTrigger()}\n                </Ref>\n            ),\n            this.state.isOpen && <div key=\"H\" style={{ position: 'absolute', top: '0px', left: '0px' }} ref={this.setHelperRef} />,\n            overlay && (\n                <div key=\"O\" className=\"popup-overlay\" style={Object.assign({}, ovStyle, overlayStyle)} onClick={this.onDocumentClick}>\n                    {modal && this.renderContent()}\n                </div>\n            ),\n            this.state.isOpen && !modal && this.renderContent(),\n        ];\n    }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n    const PropTypes = require('prop-types');\n    const TRIGGER_TYPES = ['hover', 'click', 'focus'];\n\n    Popup.propTypes = {\n        arrowStyle: PropTypes.object,\n        contentStyle: PropTypes.object,\n        overlayStyle: PropTypes.object,\n        className: PropTypes.string,\n        keepOpenOnClick: PropTypes.bool,\n        modal: PropTypes.bool,\n        closeOnDocumentClick: PropTypes.bool,\n        repositionOnResize: PropTypes.bool,\n        disabled: PropTypes.bool,\n        lockScroll: PropTypes.bool,\n        offsetX: PropTypes.number,\n        offsetY: PropTypes.number,\n        mouseEnterDelay: PropTypes.number,\n        mouseLeaveDelay: PropTypes.number,\n        onOpen: PropTypes.func,\n        onClose: PropTypes.func,\n        open: PropTypes.bool,\n        preventClose: PropTypes.bool,\n        defaultOpen: PropTypes.bool,\n        trigger: PropTypes.oneOfType([PropTypes.func, PropTypes.element]), // for uncontrolled component we don't need the trigger Element\n        on: PropTypes.oneOfType([PropTypes.oneOf(TRIGGER_TYPES), PropTypes.arrayOf(PropTypes.oneOf(TRIGGER_TYPES))]),\n        children: PropTypes.oneOfType([PropTypes.func, PropTypes.element, PropTypes.string]).isRequired,\n        position: PropTypes.oneOfType([PropTypes.oneOf(POSITION_TYPES), PropTypes.arrayOf(PropTypes.oneOf(POSITION_TYPES))]),\n        keepTooltipInside: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    };\n}\n\nclass Ref extends React.PureComponent {\n    componentDidMount() {\n        const { innerRef } = this.props;\n        if (innerRef) innerRef(findDOMNode(this));\n    }\n\n    render() {\n        const { children } = this.props;\n        return React.Children.only(children);\n    }\n}\n"],"names":["getCoordinatesForPosition","triggerBounding","ContentBounding","position","arrow","offsetX","offsetY","margin","args","split","CenterTop","top","height","CenterLeft","left","width","transform","arrowTop","arrowLeft","popupContent","tooltip","zIndex","background","border","boxShadow","padding","modal","popupArrow","overlay","bottom","right","display","POSITION_TYPES","Popup","props","isOpen","_this","open","defaultOpen","trigger","openedBy","setPosition","e","key","closePopup","state","lockScroll","document","getElementsByTagName","style","overflow","keepOpenOnClick","setState","openPopup","byClick","element","getElementsByClassName","parentNode","removeChild","disabled","onOpen","force","preventClose","onClose","resetScroll","event","console","log","clearTimeout","timeOut","mouseEnterDelay","setTimeout","mouseLeaveDelay","keepTooltipInside","boundingBox","window","innerWidth","innerHeight","querySelector","getBoundingClientRect","arrowStyle","helper","HelperEl","TriggerEl","content","ContentEl","getTooltipBoundary","positions","Array","isArray","cords","wrapperBox","bestCoords","i","length","contentBox","calculatePosition","ArrowEl","getComputedStyle","getPropertyValue","contentStyle","className","on","popupContentStyle","styles","childrenElementProps","Object","assign","ref","setContentRef","onClick","stopPropagation","indexOf","onMouseOver","onMouseEnter","onMouseOut","onMouseLeave","onAsArray","React","includes","togglePopup","onFocus","addWarperAction","setArrowRef","children","closeOnDocumentClick","overridePreventCloseOnDocumentClick","setTriggerRef","r","setHelperRef","PureComponent","this","closeOnEscape","repositionOnResize","addEventListener","onEscape","nextProps","prevProps","removeEventListener","overlayStyle","ovStyle","Ref","innerRef","renderTrigger","onDocumentClick","renderContent","findDOMNode","Children","only"],"mappings":"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"}